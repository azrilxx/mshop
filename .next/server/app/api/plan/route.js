"use strict";(()=>{var e={};e.id=9172,e.ids=[9172],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},59796:e=>{e.exports=require("zlib")},82782:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>x,serverHooks:()=>w,staticGenerationAsyncStorage:()=>f});var n={};r.r(n),r.d(n,{GET:()=>c,PATCH:()=>d,POST:()=>l});var a=r(49303),s=r(88716),i=r(60670),o=r(87070),u=r(9487),p=r(90455);async function c(e){try{let e=await (0,p.mk)(),t=await u.planDb.get(e.id);return o.NextResponse.json(t)}catch(e){return o.NextResponse.json({error:e.message||"Failed to fetch plan"},{status:500})}}async function l(e){try{let t=await (0,p.mk)(),{tier:r}=await e.json();if(!r||!["Free","Standard","Premium"].includes(r))return o.NextResponse.json({error:"Invalid tier"},{status:400});let n=await u.planDb.update(t.id,{tier:r});return("Standard"===r||"Premium"===r)&&await u.planUsageDb.resetForNewPlan(t.id),o.NextResponse.json(n)}catch(e){return o.NextResponse.json({error:e.message||"Failed to update plan"},{status:500})}}async function d(e){try{let t=await (0,p.mk)(),{action:r}=await e.json();if("increment_quota"===r)await u.planDb.incrementQuota(t.id);else{if("decrement_quota"!==r)return o.NextResponse.json({error:"Invalid action"},{status:400});await u.planDb.decrementQuota(t.id)}let n=await u.planDb.get(t.id);return o.NextResponse.json(n)}catch(e){return o.NextResponse.json({error:e.message||"Failed to update quota"},{status:500})}}let x=new a.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/plan/route",pathname:"/api/plan",filename:"route",bundlePath:"app/api/plan/route"},resolvedPagePath:"/home/runner/workspace/app/api/plan/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:w}=x,g="/api/plan/route";function y(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:f})}},90455:(e,t,r)=>{r.d(t,{Gg:()=>s,MH:()=>u,PR:()=>p,SO:()=>i,ed:()=>a,mk:()=>o});var n=r(71615);async function a(e){let t={user:e,expires:new Date(Date.now()+6048e5).toISOString()};(0,n.cookies)().set("session",JSON.stringify(t),{httpOnly:!0,secure:!0,sameSite:"lax",maxAge:604800})}async function s(){let e=(0,n.cookies)().get("session");if(!e)return null;try{let t=JSON.parse(e.value);if(new Date(t.expires)<new Date)return await i(),null;return t}catch{return null}}async function i(){(0,n.cookies)().delete("session")}async function o(){let e=await s();if(!e)throw Error("Authentication required");return e.user}async function u(e){let t=await o();if(!e.includes(t.role))throw Error("Insufficient permissions");return t}async function p(){let e=await s();return e?.user||null}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[8948,741,1615,2964,5972,9487],()=>r(82782));module.exports=n})();