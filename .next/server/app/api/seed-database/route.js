/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/seed-database/route";
exports.ids = ["app/api/seed-database/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?32c4":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?66e9":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fseed-database%2Froute&page=%2Fapi%2Fseed-database%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fseed-database%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fseed-database%2Froute&page=%2Fapi%2Fseed-database%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fseed-database%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _home_runner_workspace_app_api_seed_database_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/seed-database/route.ts */ \"(rsc)/./app/api/seed-database/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/seed-database/route\",\n        pathname: \"/api/seed-database\",\n        filename: \"route\",\n        bundlePath: \"app/api/seed-database/route\"\n    },\n    resolvedPagePath: \"/home/runner/workspace/app/api/seed-database/route.ts\",\n    nextConfigOutput,\n    userland: _home_runner_workspace_app_api_seed_database_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/seed-database/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzZWVkLWRhdGFiYXNlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzZWVkLWRhdGFiYXNlJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc2VlZC1kYXRhYmFzZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGcnVubmVyJTJGd29ya3NwYWNlJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNLO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2d4LXNhYXMtbXZwLz84NmNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvYXBwL2FwaS9zZWVkLWRhdGFiYXNlL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zZWVkLWRhdGFiYXNlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2VlZC1kYXRhYmFzZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc2VlZC1kYXRhYmFzZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL3J1bm5lci93b3Jrc3BhY2UvYXBwL2FwaS9zZWVkLWRhdGFiYXNlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zZWVkLWRhdGFiYXNlL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fseed-database%2Froute&page=%2Fapi%2Fseed-database%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fseed-database%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/seed-database/route.ts":
/*!****************************************!*\
  !*** ./app/api/seed-database/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _scripts_init_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/scripts/init-database */ \"(rsc)/./scripts/init-database.ts\");\n\n\nasync function POST() {\n    try {\n        console.log(\"\\uD83C\\uDF31 Starting database seeding...\");\n        const result = await (0,_scripts_init_database__WEBPACK_IMPORTED_MODULE_1__.initDatabase)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Database seeded successfully\",\n            data: result\n        });\n    } catch (error) {\n        console.error(\"Seeding error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message || \"Failed to seed database\",\n            details: error\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET() {\n    return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        message: \"Database seeding endpoint. Use POST to seed the database.\",\n        usage: \"POST /api/seed-database\"\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL3NlZWQtZGF0YWJhc2Uvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUMwQztBQUNZO0FBRS9DLGVBQWVFO0lBQ3BCLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTUMsU0FBUyxNQUFNSixvRUFBWUE7UUFFakMsT0FBT0QscURBQVlBLENBQUNNLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxTQUFTO1lBQ1RDLE1BQU1KO1FBQ1I7SUFDRixFQUFFLE9BQU9LLE9BQVk7UUFDbkJQLFFBQVFPLEtBQUssQ0FBQyxrQkFBa0JBO1FBQ2hDLE9BQU9WLHFEQUFZQSxDQUFDTSxJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEcsT0FBT0EsTUFBTUYsT0FBTyxJQUFJO1lBQ3hCRyxTQUFTRDtRQUNYLEdBQ0E7WUFBRUUsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFTyxlQUFlQztJQUNwQixPQUFPYixxREFBWUEsQ0FBQ00sSUFBSSxDQUFDO1FBQ3ZCRSxTQUFTO1FBQ1RNLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2d4LXNhYXMtbXZwLy4vYXBwL2FwaS9zZWVkLWRhdGFiYXNlL3JvdXRlLnRzPzE2ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IGluaXREYXRhYmFzZSB9IGZyb20gJ0Avc2NyaXB0cy9pbml0LWRhdGFiYXNlJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+MsSBTdGFydGluZyBkYXRhYmFzZSBzZWVkaW5nLi4uJylcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBpbml0RGF0YWJhc2UoKVxuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ0RhdGFiYXNlIHNlZWRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgZGF0YTogcmVzdWx0XG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1NlZWRpbmcgZXJyb3I6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBcbiAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSB8fCAnRmFpbGVkIHRvIHNlZWQgZGF0YWJhc2UnLFxuICAgICAgICBkZXRhaWxzOiBlcnJvclxuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgIClcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgIG1lc3NhZ2U6ICdEYXRhYmFzZSBzZWVkaW5nIGVuZHBvaW50LiBVc2UgUE9TVCB0byBzZWVkIHRoZSBkYXRhYmFzZS4nLFxuICAgIHVzYWdlOiAnUE9TVCAvYXBpL3NlZWQtZGF0YWJhc2UnXG4gIH0pXG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiaW5pdERhdGFiYXNlIiwiUE9TVCIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHQiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJkYXRhIiwiZXJyb3IiLCJkZXRhaWxzIiwic3RhdHVzIiwiR0VUIiwidXNhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/seed-database/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseOperations: () => (/* binding */ DatabaseOperations),\n/* harmony export */   dbOps: () => (/* binding */ dbOps)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(rsc)/./lib/supabase.ts\");\n\nclass DatabaseOperations {\n    // Security middleware - Row Level Security equivalent\n    async checkUserAccess(userId, resourceOwnerId, userRole) {\n        // Admin bypass\n        if (userRole === \"admin\") return true;\n        // User can access their own resources\n        return userId === resourceOwnerId;\n    }\n    // User operations with Supabase\n    async createUser(user) {\n        // Validate required fields\n        if (!user.email || !user.name || !user.role) {\n            throw new Error(\"Missing required user fields\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").insert([\n            {\n                id: user.id,\n                email: user.email,\n                name: user.name,\n                role: user.role,\n                plan: user.plan || \"free\",\n                tenant_id: user.tenant_id,\n                status: user.status || \"active\"\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async getUserByEmail(email) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").select(\"*\").eq(\"email\", email).single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null // No rows returned\n            ;\n            throw error;\n        }\n        return data;\n    }\n    async getUserById(id, requestingUserId, requestingUserRole) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").select(\"*\").eq(\"id\", id).single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null;\n            throw error;\n        }\n        // Security check - users can only access their own profile unless admin\n        if (data && requestingUserId && !await this.checkUserAccess(requestingUserId, data.id, requestingUserRole)) {\n            return null;\n        }\n        return data;\n    }\n    async updateUser(id, updates, requestingUserId, requestingUserRole) {\n        // Security check\n        if (requestingUserId && !await this.checkUserAccess(requestingUserId, id, requestingUserRole)) {\n            throw new Error(\"Unauthorized access\");\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").update(updates).eq(\"id\", id);\n        if (error) throw error;\n    }\n    // Product operations with Supabase\n    async getProducts(requestingUserId, requestingUserRole) {\n        let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").select(\"*\");\n        // If not admin, only return active products or user's own products\n        if (requestingUserRole !== \"admin\") {\n            if (requestingUserId) {\n                query = query.or(`status.eq.active,seller_id.eq.${requestingUserId}`);\n            } else {\n                query = query.eq(\"status\", \"active\");\n            }\n        }\n        const { data, error } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async getProductsBySeller(sellerId, requestingUserId, requestingUserRole) {\n        // Security check - users can only access their own products unless admin\n        if (requestingUserId && !await this.checkUserAccess(requestingUserId, sellerId, requestingUserRole)) {\n            throw new Error(\"Unauthorized access\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").select(\"*\").eq(\"seller_id\", sellerId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async getProductById(id, requestingUserId, requestingUserRole) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").select(\"*\").eq(\"id\", id).single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null;\n            throw error;\n        }\n        // Security check - non-active products only visible to owner or admin\n        if (data && data.status !== \"active\" && requestingUserId) {\n            if (!await this.checkUserAccess(requestingUserId, data.seller_id, requestingUserRole)) {\n                return null;\n            }\n        }\n        return data;\n    }\n    async createProduct(product, requestingUserId) {\n        // Validate required fields\n        if (!product.name || !product.price || !product.seller_id) {\n            throw new Error(\"Missing required product fields\");\n        }\n        // Security check - users can only create products for themselves\n        if (product.seller_id !== requestingUserId) {\n            throw new Error(\"Unauthorized: Cannot create product for another user\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").insert([\n            {\n                ...product,\n                merchant_id: product.seller_id,\n                tags: product.tags || []\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateProduct(id, updates, requestingUserId, requestingUserRole) {\n        const product = await this.getProductById(id);\n        if (!product) {\n            throw new Error(\"Product not found\");\n        }\n        // Security check\n        if (!await this.checkUserAccess(requestingUserId, product.seller_id, requestingUserRole)) {\n            throw new Error(\"Unauthorized access\");\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").update(updates).eq(\"id\", id);\n        if (error) throw error;\n    }\n    // Advertisement operations with Supabase\n    async getAdvertisements(requestingUserId, requestingUserRole) {\n        let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").select(\"*\");\n        // If not admin, only return user's own ads or active public ads\n        if (requestingUserRole !== \"admin\") {\n            if (requestingUserId) {\n                query = query.or(`seller_id.eq.${requestingUserId},and(status.eq.active,active_from.lte.${new Date().toISOString()},active_until.gte.${new Date().toISOString()})`);\n            } else {\n                const now = new Date().toISOString();\n                query = query.eq(\"status\", \"active\").lte(\"active_from\", now).gte(\"active_until\", now);\n            }\n        }\n        const { data, error } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async getActiveAdvertisements() {\n        const now = new Date().toISOString();\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").select(\"*\").eq(\"status\", \"active\").lte(\"active_from\", now).gte(\"active_until\", now).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async createAdvertisement(ad, requestingUserId) {\n        // Validate required fields\n        if (!ad.seller_id || !ad.title || !ad.active_from || !ad.active_until) {\n            throw new Error(\"Missing required advertisement fields\");\n        }\n        // Security check\n        if (ad.seller_id !== requestingUserId) {\n            throw new Error(\"Unauthorized: Cannot create advertisement for another user\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").insert([\n            {\n                ...ad,\n                merchant_id: ad.seller_id // Ensure merchant_id is set\n            }\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateAdvertisement(id, updates, requestingUserId, requestingUserRole) {\n        const { data: ad, error: fetchError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").select(\"*\").eq(\"id\", id).single();\n        if (fetchError) throw fetchError;\n        if (!ad) throw new Error(\"Advertisement not found\");\n        // Security check\n        if (!await this.checkUserAccess(requestingUserId, ad.seller_id, requestingUserRole)) {\n            throw new Error(\"Unauthorized access\");\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").update(updates).eq(\"id\", id);\n        if (error) throw error;\n    }\n    // Order operations with Supabase\n    async getOrders(requestingUserId, requestingUserRole) {\n        let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").select(\"*\");\n        // Security: only admins can see all orders\n        if (requestingUserRole !== \"admin\") {\n            // Users can only see their own orders (as buyer or seller)\n            query = query.or(`buyer_id.eq.${requestingUserId},seller_id.eq.${requestingUserId}`);\n        }\n        const { data, error } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async createOrder(order, requestingUserId) {\n        // Validate required fields\n        if (!order.buyer_id || !order.seller_id || !order.product_id || !order.total_price) {\n            throw new Error(\"Missing required order fields\");\n        }\n        // Security check - users can only create orders as buyers\n        if (order.buyer_id !== requestingUserId) {\n            throw new Error(\"Unauthorized: Cannot create order for another user\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").insert([\n            order\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateOrder(id, updates, requestingUserId, requestingUserRole) {\n        const { data: order, error: fetchError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").select(\"*\").eq(\"id\", id).single();\n        if (fetchError) throw fetchError;\n        if (!order) throw new Error(\"Order not found\");\n        // Security check - buyers and sellers can update their orders\n        const canAccess = order.buyer_id === requestingUserId || order.seller_id === requestingUserId || requestingUserRole === \"admin\";\n        if (!canAccess) {\n            throw new Error(\"Unauthorized access\");\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"orders\").update(updates).eq(\"id\", id);\n        if (error) throw error;\n    }\n    // Rating operations with Supabase\n    async getRatingsByProduct(productId) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ratings\").select(\"*\").eq(\"product_id\", productId).order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async createRating(rating, requestingUserId) {\n        // Validate required fields\n        if (!rating.product_id || !rating.user_id || !rating.rating || rating.rating < 1 || rating.rating > 5) {\n            throw new Error(\"Invalid rating data\");\n        }\n        // Security check - users can only create ratings as themselves\n        if (rating.user_id !== requestingUserId) {\n            throw new Error(\"Unauthorized: Cannot create rating for another user\");\n        }\n        // Check for duplicate ratings\n        const { data: existingRating } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ratings\").select(\"id\").eq(\"product_id\", rating.product_id).eq(\"user_id\", requestingUserId).single();\n        if (existingRating) {\n            throw new Error(\"User has already rated this product\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ratings\").insert([\n            rating\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    // Storefront operations with Supabase\n    async getStorefronts(requestingUserId, requestingUserRole) {\n        let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").select(\"*\");\n        // If not admin, only return user's own storefront or active public ones\n        if (requestingUserRole !== \"admin\") {\n            if (requestingUserId) {\n                query = query.or(`merchant_id.eq.${requestingUserId},status.eq.active`);\n            } else {\n                query = query.eq(\"status\", \"active\");\n            }\n        }\n        const { data, error } = await query.order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw error;\n        return data || [];\n    }\n    async getStorefrontBySlug(slug) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").select(\"*\").eq(\"slug\", slug).eq(\"status\", \"active\").single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null;\n            throw error;\n        }\n        return data;\n    }\n    async getStorefrontByMerchant(merchantId, requestingUserId, requestingUserRole) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").select(\"*\").eq(\"merchant_id\", merchantId).single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null;\n            throw error;\n        }\n        // Security check for private access\n        if (requestingUserId && !await this.checkUserAccess(requestingUserId, merchantId, requestingUserRole)) {\n            // Return only if storefront is public\n            return data && data.status === \"active\" ? data : null;\n        }\n        return data;\n    }\n    async createStorefront(storefront, requestingUserId) {\n        // Validate required fields\n        if (!storefront.merchant_id || !storefront.store_name || !storefront.slug) {\n            throw new Error(\"Missing required storefront fields\");\n        }\n        // Security check\n        if (storefront.merchant_id !== requestingUserId) {\n            throw new Error(\"Unauthorized: Cannot create storefront for another user\");\n        }\n        // Check for duplicate slug\n        const existingStorefront = await this.getStorefrontBySlug(storefront.slug);\n        if (existingStorefront) {\n            throw new Error(\"Storefront slug already exists\");\n        }\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").insert([\n            storefront\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateStorefront(id, updates, requestingUserId, requestingUserRole) {\n        const { data: storefront, error: fetchError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").select(\"*\").eq(\"id\", id).single();\n        if (fetchError) throw fetchError;\n        if (!storefront) throw new Error(\"Storefront not found\");\n        // Security check\n        if (!await this.checkUserAccess(requestingUserId, storefront.merchant_id, requestingUserRole)) {\n            throw new Error(\"Unauthorized access\");\n        }\n        // If updating slug, check for duplicates\n        if (updates.slug && updates.slug !== storefront.slug) {\n            const existingStorefront = await this.getStorefrontBySlug(updates.slug);\n            if (existingStorefront) {\n                throw new Error(\"Storefront slug already exists\");\n            }\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"storefronts\").update(updates).eq(\"id\", id);\n        if (error) throw error;\n    }\n    async generateUniqueSlug(baseName) {\n        const baseSlug = baseName.toLowerCase().replace(/[^a-z0-9\\s-]/g, \"\").replace(/\\s+/g, \"-\").replace(/-+/g, \"-\").trim();\n        let counter = 0;\n        let slug = baseSlug;\n        while(true){\n            const existing = await this.getStorefrontBySlug(slug);\n            if (!existing) break;\n            counter++;\n            slug = `${baseSlug}-${counter}`;\n        }\n        return slug;\n    }\n    // Subscription operations with Supabase\n    async getUserSubscription(userId) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"subscriptions\").select(\"*\").eq(\"user_id\", userId).eq(\"status\", \"active\").single();\n        if (error) {\n            if (error.code === \"PGRST116\") return null;\n            throw error;\n        }\n        return data;\n    }\n    async createSubscription(subscription) {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"subscriptions\").insert([\n            subscription\n        ]).select().single();\n        if (error) throw error;\n        return data;\n    }\n    async updateSubscription(userId, updates) {\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"subscriptions\").update(updates).eq(\"user_id\", userId);\n        if (error) throw error;\n    }\n    // Legacy compatibility methods for plan operations\n    async getUserPlan(userId) {\n        const subscription = await this.getUserSubscription(userId);\n        if (!subscription) return {\n            tier: \"free\",\n            maxProducts: 1,\n            maxAds: 0\n        };\n        const planLimits = {\n            free: {\n                tier: \"free\",\n                maxProducts: 1,\n                maxAds: 0\n            },\n            standard: {\n                tier: \"standard\",\n                maxProducts: 10,\n                maxAds: 3\n            },\n            premium: {\n                tier: \"premium\",\n                maxProducts: 100,\n                maxAds: 10\n            }\n        };\n        return planLimits[subscription.plan] || planLimits.free;\n    }\n    async updateUserPlan(userId, planData) {\n        const existing = await this.getUserSubscription(userId);\n        if (existing) {\n            await this.updateSubscription(userId, planData);\n        } else {\n            await this.createSubscription({\n                user_id: userId,\n                plan: planData.tier || \"free\",\n                status: \"active\",\n                current_period_start: new Date().toISOString(),\n                current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString() // 30 days\n            });\n        }\n    }\n    // Usage tracking (can be implemented later with dedicated tables)\n    async getUserUsage(userId) {\n        // Count from actual tables\n        const [productCount, adCount] = await Promise.all([\n            _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").select(\"id\", {\n                count: \"exact\"\n            }).eq(\"seller_id\", userId),\n            _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"ads\").select(\"id\", {\n                count: \"exact\"\n            }).eq(\"seller_id\", userId)\n        ]);\n        return {\n            productsCreated: productCount.count || 0,\n            adsCreated: adCount.count || 0,\n            reportsGenerated: 0 // Placeholder\n        };\n    }\n    async incrementUsage(userId, field) {\n        // This can be implemented with a dedicated usage tracking table if needed\n        // For now, we track usage by counting actual records\n        console.log(`Usage incremented for user ${userId}: ${field}`);\n    }\n    // Insights operations (placeholder)\n    async getInsights() {\n        // This would typically aggregate data from multiple tables\n        return [];\n    }\n}\n// Export the database operations instance\nconst dbOps = new DatabaseOperations();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://gpxhjjhhnijrxoumxsqp.supabase.co\" || 0;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImdweGhqamhobmlqcnhvdW14c3FwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI4MTE3MTksImV4cCI6MjA2ODM4NzcxOX0.t-0zVxVbY5R52qrXn8cuA6CFYVG41jjBkGzOMR9UEtU\" || 0;\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ29EO0FBRXBELE1BQU1DLGNBQWNDLDBDQUFvQyxJQUFJO0FBQzVELE1BQU1HLGtCQUFrQkgsa05BQXlDLElBQUk7QUFFOUQsTUFBTUssV0FBV1AsbUVBQVlBLENBQUNDLGFBQWFJLGlCQUFnQjtBQWdHbEUsaUVBQWVFLFFBQVFBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZ3gtc2Fhcy1tdnAvLi9saWIvc3VwYWJhc2UudHM/Yzk5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgfHwgJ2h0dHBzOi8vZ3B4aGpqaGhuaWpyeG91bXhzcXAuc3VwYWJhc2UuY28nXG5jb25zdCBzdXBhYmFzZUFub25LZXkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSB8fCAnZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjM01pT2lKemRYQmhZbUZ6WlNJc0luSmxaaUk2SW1kd2VHaHFhbWhvYm1scWNuaHZkVzE0YzNGd0lpd2ljbTlzWlNJNkltRnViMjRpTENKcFlYUWlPakUzTlRJNE1URTNNVGtzSW1WNGNDSTZNakEyT0RNNE56Y3hPWDAudC0welZ4VmJZNVI1MnFyWG44Y3VBNkNGWVZHNDFqakJrR3pPTVI5VUV0VSdcblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpXG5cbi8vIERhdGFiYXNlIHR5cGVzIGJhc2VkIG9uIG91ciBzY2hlbWFcbmV4cG9ydCBpbnRlcmZhY2UgVXNlciB7XG4gIGlkOiBzdHJpbmdcbiAgZW1haWw6IHN0cmluZ1xuICBuYW1lOiBzdHJpbmdcbiAgcm9sZTogJ2J1eWVyJyB8ICdzZWxsZXInIHwgJ2FkbWluJ1xuICBwbGFuOiAnZnJlZScgfCAnc3RhbmRhcmQnIHwgJ3ByZW1pdW0nXG4gIHRlbmFudF9pZDogc3RyaW5nXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xuICBzdGF0dXM6ICdhY3RpdmUnIHwgJ2luYWN0aXZlJyB8ICdwZW5kaW5nJ1xuICB1cGRhdGVkX2F0Pzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdCB7XG4gIGlkOiBzdHJpbmdcbiAgbmFtZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgcHJpY2U6IG51bWJlclxuICBjYXRlZ29yeTogc3RyaW5nXG4gIHNlbGxlcl9pZDogc3RyaW5nXG4gIG1lcmNoYW50X2lkOiBzdHJpbmdcbiAgaW1hZ2VfdXJsOiBzdHJpbmdcbiAgc3RhdHVzOiAnYWN0aXZlJyB8ICdpbmFjdGl2ZScgfCAncGVuZGluZydcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ/OiBzdHJpbmdcbiAgc3RvY2s6IG51bWJlclxuICB0YWdzOiBzdHJpbmdbXVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFkdmVydGlzZW1lbnQge1xuICBpZDogc3RyaW5nXG4gIHNlbGxlcl9pZDogc3RyaW5nXG4gIG1lcmNoYW50X2lkOiBzdHJpbmdcbiAgcHJvZHVjdF9pZD86IHN0cmluZ1xuICB0aXRsZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgaW1hZ2VfdXJsOiBzdHJpbmdcbiAgYWN0aXZlX2Zyb206IHN0cmluZ1xuICBhY3RpdmVfdW50aWw6IHN0cmluZ1xuICBzdGF0dXM6ICdhY3RpdmUnIHwgJ2luYWN0aXZlJyB8ICdleHBpcmVkJ1xuICBjcmVhdGVkX2F0OiBzdHJpbmdcbiAgdXBkYXRlZF9hdD86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE9yZGVyIHtcbiAgaWQ6IHN0cmluZ1xuICBidXllcl9pZDogc3RyaW5nXG4gIHNlbGxlcl9pZDogc3RyaW5nXG4gIHByb2R1Y3RfaWQ6IHN0cmluZ1xuICBxdWFudGl0eTogbnVtYmVyXG4gIHRvdGFsX3ByaWNlOiBudW1iZXJcbiAgc3RhdHVzOiAndW5wYWlkJyB8ICd0b19zaGlwJyB8ICdzaGlwcGluZycgfCAnY29tcGxldGUnIHwgJ2NhbmNlbGxlZCdcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xuICBzaGlwcGluZ19hZGRyZXNzOiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBSYXRpbmcge1xuICBpZDogc3RyaW5nXG4gIHByb2R1Y3RfaWQ6IHN0cmluZ1xuICB1c2VyX2lkOiBzdHJpbmdcbiAgcmF0aW5nOiBudW1iZXJcbiAgY29tbWVudDogc3RyaW5nXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JlZnJvbnQge1xuICBpZDogc3RyaW5nXG4gIG1lcmNoYW50X2lkOiBzdHJpbmdcbiAgc3RvcmVfbmFtZTogc3RyaW5nXG4gIHNsdWc6IHN0cmluZ1xuICBiaW86IHN0cmluZ1xuICBsb2dvX3VybD86IHN0cmluZ1xuICBiYW5uZXJfdXJsPzogc3RyaW5nXG4gIGN1c3RvbV9kb21haW4/OiBzdHJpbmdcbiAgY29udGFjdF9lbWFpbD86IHN0cmluZ1xuICBjb250YWN0X3Bob25lPzogc3RyaW5nXG4gIGFkZHJlc3M/OiBzdHJpbmdcbiAgc3RhdHVzOiAnYWN0aXZlJyB8ICdpbmFjdGl2ZScgfCAncGVuZGluZydcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmlwdGlvbiB7XG4gIGlkOiBzdHJpbmdcbiAgdXNlcl9pZDogc3RyaW5nXG4gIHBsYW46ICdmcmVlJyB8ICdzdGFuZGFyZCcgfCAncHJlbWl1bSdcbiAgc3RhdHVzOiAnYWN0aXZlJyB8ICdjYW5jZWxsZWQnIHwgJ2V4cGlyZWQnXG4gIGN1cnJlbnRfcGVyaW9kX3N0YXJ0OiBzdHJpbmdcbiAgY3VycmVudF9wZXJpb2RfZW5kOiBzdHJpbmdcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdXBhYmFzZVxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/supabase.ts\n");

/***/ }),

/***/ "(rsc)/./scripts/init-database.ts":
/*!**********************************!*\
  !*** ./scripts/init-database.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initDatabase: () => (/* binding */ initDatabase)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./lib/supabase.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n\n\nasync function initDatabase() {\n    console.log(\"\\uD83D\\uDE80 Initializing MSHOP database with Supabase...\");\n    try {\n        // Test Supabase connection\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"profiles\").select(\"count\").limit(1);\n        if (error) {\n            console.error(\"Supabase connection error:\", error);\n            throw error;\n        }\n        console.log(\"✅ Supabase connection successful\");\n        // Create sample admin user\n        const adminUser = {\n            id: \"admin-001\",\n            email: \"admin@mshop.com\",\n            name: \"Admin User\",\n            role: \"admin\",\n            plan: \"premium\",\n            tenant_id: \"tenant_admin\",\n            status: \"active\"\n        };\n        // Create sample seller users\n        const seller1 = {\n            id: \"seller-001\",\n            email: \"seller1@mshop.com\",\n            name: \"John Seller\",\n            role: \"seller\",\n            plan: \"standard\",\n            tenant_id: \"tenant_seller1\",\n            status: \"active\"\n        };\n        const seller2 = {\n            id: \"seller-002\",\n            email: \"seller2@mshop.com\",\n            name: \"Jane Merchant\",\n            role: \"seller\",\n            plan: \"premium\",\n            tenant_id: \"tenant_seller2\",\n            status: \"active\"\n        };\n        // Create sample buyer user\n        const buyer1 = {\n            id: \"buyer-001\",\n            email: \"buyer1@mshop.com\",\n            name: \"Bob Buyer\",\n            role: \"buyer\",\n            plan: \"free\",\n            tenant_id: \"tenant_buyer1\",\n            status: \"active\"\n        };\n        // Insert users\n        const users = [\n            adminUser,\n            seller1,\n            seller2,\n            buyer1\n        ];\n        for (const user of users){\n            try {\n                await _lib_db__WEBPACK_IMPORTED_MODULE_1__.dbOps.createUser(user);\n                console.log(`✅ Created user: ${user.email}`);\n            } catch (error) {\n                if (error.code === \"23505\") {\n                    console.log(`⚠️ User already exists: ${user.email}`);\n                } else {\n                    console.error(`❌ Error creating user ${user.email}:`, error);\n                }\n            }\n        }\n        // Create sample products\n        const products = [\n            {\n                name: \"Solar Panel System 5kW\",\n                description: \"Complete solar panel system for residential use\",\n                price: 5000.00,\n                category: \"Solar Energy\",\n                seller_id: \"seller-001\",\n                merchant_id: \"seller-001\",\n                image_url: \"/images/solar-panel-5kw.jpg\",\n                status: \"active\",\n                stock: 10,\n                tags: [\n                    \"solar\",\n                    \"renewable\",\n                    \"residential\"\n                ]\n            },\n            {\n                name: \"Industrial Generator 50kW\",\n                description: \"Heavy-duty generator for industrial applications\",\n                price: 25000.00,\n                category: \"Generators\",\n                seller_id: \"seller-001\",\n                merchant_id: \"seller-001\",\n                image_url: \"/images/generator-50kw.jpg\",\n                status: \"active\",\n                stock: 5,\n                tags: [\n                    \"generator\",\n                    \"industrial\",\n                    \"power\"\n                ]\n            },\n            {\n                name: \"LED Street Light 100W\",\n                description: \"Energy-efficient LED street lighting solution\",\n                price: 150.00,\n                category: \"Lighting\",\n                seller_id: \"seller-002\",\n                merchant_id: \"seller-002\",\n                image_url: \"/images/led-street-light.jpg\",\n                status: \"active\",\n                stock: 50,\n                tags: [\n                    \"led\",\n                    \"street\",\n                    \"lighting\",\n                    \"efficient\"\n                ]\n            },\n            {\n                name: \"Battery Storage System 10kWh\",\n                description: \"Lithium-ion battery storage for renewable energy\",\n                price: 8000.00,\n                category: \"Energy Storage\",\n                seller_id: \"seller-002\",\n                merchant_id: \"seller-002\",\n                image_url: \"/images/battery-storage.jpg\",\n                status: \"active\",\n                stock: 8,\n                tags: [\n                    \"battery\",\n                    \"storage\",\n                    \"lithium\",\n                    \"renewable\"\n                ]\n            }\n        ];\n        for (const product of products){\n            try {\n                await _lib_db__WEBPACK_IMPORTED_MODULE_1__.dbOps.createProduct(product, product.seller_id);\n                console.log(`✅ Created product: ${product.name}`);\n            } catch (error) {\n                console.error(`❌ Error creating product ${product.name}:`, error);\n            }\n        }\n        // Create sample storefronts\n        const storefronts = [\n            {\n                merchant_id: \"seller-001\",\n                store_name: \"SolarTech Solutions\",\n                slug: \"solartech-solutions\",\n                bio: \"Leading provider of solar energy solutions for residential and commercial applications.\",\n                logo_url: \"/images/solartech-logo.png\",\n                banner_url: \"/images/solartech-banner.jpg\",\n                contact_email: \"contact@solartech.com\",\n                contact_phone: \"+1-555-0123\",\n                address: \"123 Solar Street, Energy City, EC 12345\",\n                status: \"active\"\n            },\n            {\n                merchant_id: \"seller-002\",\n                store_name: \"PowerMax Industries\",\n                slug: \"powermax-industries\",\n                bio: \"Industrial power solutions and energy storage systems for modern businesses.\",\n                logo_url: \"/images/powermax-logo.png\",\n                banner_url: \"/images/powermax-banner.jpg\",\n                contact_email: \"info@powermax.com\",\n                contact_phone: \"+1-555-0456\",\n                address: \"456 Industrial Blvd, Power City, PC 67890\",\n                status: \"active\"\n            }\n        ];\n        for (const storefront of storefronts){\n            try {\n                await _lib_db__WEBPACK_IMPORTED_MODULE_1__.dbOps.createStorefront(storefront, storefront.merchant_id);\n                console.log(`✅ Created storefront: ${storefront.store_name}`);\n            } catch (error) {\n                if (error.message.includes(\"already exists\")) {\n                    console.log(`⚠️ Storefront already exists: ${storefront.store_name}`);\n                } else {\n                    console.error(`❌ Error creating storefront ${storefront.store_name}:`, error);\n                }\n            }\n        }\n        // Create sample subscriptions\n        const subscriptions = [\n            {\n                user_id: \"seller-001\",\n                plan: \"standard\",\n                status: \"active\",\n                current_period_start: new Date().toISOString(),\n                current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString()\n            },\n            {\n                user_id: \"seller-002\",\n                plan: \"premium\",\n                status: \"active\",\n                current_period_start: new Date().toISOString(),\n                current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString()\n            }\n        ];\n        for (const subscription of subscriptions){\n            try {\n                await _lib_db__WEBPACK_IMPORTED_MODULE_1__.dbOps.createSubscription(subscription);\n                console.log(`✅ Created subscription for user: ${subscription.user_id}`);\n            } catch (error) {\n                console.error(`❌ Error creating subscription for ${subscription.user_id}:`, error);\n            }\n        }\n        console.log(\"\\uD83C\\uDF89 Database initialization completed successfully!\");\n        return {\n            success: true,\n            message: \"Database initialized with sample data\",\n            stats: {\n                users: users.length,\n                products: products.length,\n                storefronts: storefronts.length,\n                subscriptions: subscriptions.length\n            }\n        };\n    } catch (error) {\n        console.error(\"❌ Error initializing database:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./scripts/init-database.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/ws","vendor-chunks/whatwg-url","vendor-chunks/isows","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fseed-database%2Froute&page=%2Fapi%2Fseed-database%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fseed-database%2Froute.ts&appDir=%2Fhome%2Frunner%2Fworkspace%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Frunner%2Fworkspace&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();